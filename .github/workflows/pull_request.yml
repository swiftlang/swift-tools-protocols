name: Pull request

permissions:
  contents: read

on:
  pull_request:
    types: [opened, reopened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: Test
    uses: swiftlang/github-workflows/.github/workflows/swift_package_test.yml@main
    with:
      linux_os_versions: '["amazonlinux2", "bookworm", "noble", "jammy", "rhel-ubi9"]'
      linux_pre_build_command: ./.github/scripts/prebuild.sh
      linux_swift_versions: '["nightly-main", "nightly-6.2"]'
      windows_pre_build_command: 'Invoke-Program .\.github\scripts\prebuild.ps1'
      windows_swift_versions: '["nightly-main"]'
      enable_linux_static_sdk_build: true
      enable_macos_checks: true
      macos_exclude_xcode_versions: "[{\"xcode_version\": \"16.3\"}, {\"xcode_version\": \"16.4\"}]"
      macos_pre_build_command: ./.github/scripts/prebuild.sh
  cmake-smoke-test:
    name: cmake-smoke-test
    uses: swiftlang/github-workflows/.github/workflows/swift_package_test.yml@main
    with:
      linux_os_versions: '["noble"]'
      linux_pre_build_command: INSTALL_CMAKE=1 ./.github/scripts/prebuild.sh
      linux_build_command: 'swift package -Xbuild-tools-swiftc -DUSE_PROCESS_SPAWNING_WORKAROUND cmake-smoke-test --disable-sandbox --cmake-path `which cmake` --ninja-path `which ninja` --extra-cmake-arg -DCMAKE_C_COMPILER=`which clang` --extra-cmake-arg -DCMAKE_CXX_COMPILER=`which clang++` --extra-cmake-arg -DCMAKE_Swift_COMPILER=`which swiftc`'
      linux_swift_versions: '["nightly-main"]'
      enable_macos_checks: true
      macos_xcode_versions: '["26.0"]'
      macos_pre_build_command: INSTALL_CMAKE=1 ./.github/scripts/prebuild.sh
      macos_build_command: 'export PATH=$PATH:$RUNNER_TOOL_CACHE && swift package cmake-smoke-test --disable-sandbox --cmake-path `which cmake` --ninja-path `which ninja` --extra-cmake-arg -DCMAKE_C_COMPILER=`which clang` --extra-cmake-arg -DCMAKE_CXX_COMPILER=`which clang++` --extra-cmake-arg -DCMAKE_Swift_COMPILER=`which swiftc`'
      windows_pre_build_command: 'Invoke-Program .\.github\scripts\prebuild.ps1 -InstallCMake'
      windows_swift_versions: '["nightly-main"]'
      windows_build_command: 'Invoke-Program swift package cmake-smoke-test --disable-sandbox --cmake-path (Get-Command cmake).Path --ninja-path (Get-Command ninja).Path --extra-cmake-arg "-DCMAKE_C_COMPILER=$((Get-Command clang).Path)" --extra-cmake-arg "-DCMAKE_CXX_COMPILER=$((Get-Command clang).Path)" --extra-cmake-arg "-DCMAKE_Swift_COMPILER=$((Get-Command swiftc).Path)" --extra-cmake-arg "-DCMAKE_STATIC_LIBRARY_PREFIX_Swift=lib" --extra-cmake-arg "-DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL"'

  soundness:
    name: Soundness
    uses: swiftlang/github-workflows/.github/workflows/soundness.yml@main
    with:
      license_header_check_project_name: "Swift"
      api_breakage_check_enabled: false
